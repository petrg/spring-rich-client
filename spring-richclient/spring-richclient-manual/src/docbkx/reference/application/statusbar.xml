<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE partintro PUBLIC "-//OASIS//DTD DocBook XML V4.4//EN"
"http://www.oasis-open.org/docbook/xml/4.4/docbookx.dtd">

<chapter id="application_statusbar">
    <title>StatusBar</title>
  
    <para>The statusbar of the application can be used to show informative messages to the user, and to monitor progress.</para>
    
    <para>There is one implementation included in the framework, the <classname>DefaultStatusBar</classname></para>
    
    <para>TODO: provide screenshots</para>

    <section id="application_statusbar_default">
        <title>DefaultStatusBar</title>
        <para>The default statusbar has a message area, and a progress area. The progress area is default hidden.</para>
        
        <para>Error messages and info messages are shown in the same area, but the error messages are shown in red.</para>
        
        <para>If an error message is shown when a info message is shown, the error message is shown over the info message. When the error message is erased, the info message is restored.</para>
    </section>
    
    <section id="application_statusbar_messages">
        <title>(Error)Messages</title>
        
        <para>Two types of messages can be set on a statusbar, an error message and a "normal" message. A <classname>StatusBar</classname> implementation is free to choose the
        rendering style of the messages.</para>
    </section>

    <section id="application_statusbar_progress">
        <title>Monitoring Progress</title>

        <para>The statusbar can provide a <classname>ProgressMonitor</classname>.</para>
        
        <para>TODO: more text needed</para>
    </section>

    <section id="application_statusbar_implementation">
        <title>Other StatusBar Implementations</title>

        <para>To provide another StatusBar implementation, implement the <classname>StatusBar</classname> interface, and override the <code>ApplicationLifecycleAdvisor.getStatusBar()</code> method.</para>
        
        <para>If you have a <classname>CustomStatusBar</classname> class like this ...</para>
        <programlisting>
public CustomStatusBar implements StatusBar {
    ...
}</programlisting>
        
        <para>you use it like this:</para>

        <programlisting>
public class CustomApplicationLifecycleAdvisor extends DefaultApplicationLifecycleAdvisor {

    ...

    @Override
    public StatusBar getStatusBar() {
        return new CustomStatusBar();
    }
    
    ...
}</programlisting>
    </section>

</chapter>

 -----
 Development setup
 -----
 Geoffrey De Smet
 -----

Development setup

    This section describes how to setup the project and start developing it.

Installation

    Download and install the following technologies:

    * JDK 1.5+ from {{http://java.sun.com}}

        * Set the <<<JAVA_HOME>>> environment variable.

        * NOTE: Spring-richclient can be used in Java 1.4+,
         but the tiger module and the petclinic sample require Java 1.5+.

    * Maven 2+ from {{http://maven.apache.org}}

        * Set the <<<M2_HOME>>> environment variable.

        * Adjust the <<<PATH>>> environment variable to add <<<$M2_HOME/bin>>>;

        * On Windows, the use of cygwin (with OpenSSH and Subversion) from {{http://www.cygwin.com}}
        to run maven is required for very advanced functionality (ssh repository deploy, ...)

    * One Java IDE (see below for configuration) with Subversion support

        * Eclipse 3.1+ from {{http://www.eclipse.org}}

            * Install Subclipse plugin from {{http://subclipse.tigris.org}} for Subversion support

            * Install Web Tools from {{http://www.eclipse.org}} for XML support

        * NetBeans 5+ from {{http://www.netbeans.org}}

            * Subversion support is not that good yet, use a separate subversion client

        * IntelliJ IDEA 5.1+ from {{http://www.jetbains.com}}

            * Subversion is fully supported since IDEA 5

    * One separate Subversion client (optional if already supported in the IDE)

        * Subversion (shell client) from {{http://subversion.tigris.org}}

        * Tortoise for Windows explorer from {{http://tortoisesvn.tigris.org}}

        * Any Subversion client referenced in <Links> on {{http://subversion.tigris.org}}

    * One UML tool (optional)

        * Poseidon 4+ community edition from {{http://www.gentleware.com}}

    * One relational database (only required for petclinic)

        * HSQLDB in memory (already included in dependencies, no need to install)

        * MySQL server 5+ from {{http://www.mysql.org}} with

            * MySQL Query browser

            * MySQL Administrator

    * One J2EE 1.4+ application server (only required for petclinic standapart)

        * Tomcat 5.5+ from {{http://tomcat.apache.org}}

        * JBoss 4+ from {{http://www.jboss.org}}

        * ...

Getting the sources

    See {{{../source-repository.html}the source repository}}.

Building

    Open your command line (CygWin, bash, DOS, ...) and run in the project root:

+--
mvn install
+--

    This builds the project and installs it into your local repository.

    NOTE: The first time you run maven it will download all dependencies
    and cache them in your local repository in <<<~/.m2/repository>>>,
    this will take a while. Run it again afterwards to see how fast it really is.
    Then take a look at the {{faq.html}} to run it even faster.

    Once a multiproject install has been run, it's possible to build a single module
    with the same command in the module root.

Configuring your favorite IDE

* Eclipse

    There are 2 choices:

    * Generate .project, ... (recommended for the moment)

        Run in the root of the project <<<mvn eclipse:eclipse>>>.
        This command automatically makes use of the <eclipse plugin in Maven 2>.

        Import all existing projects found under the root of the project.
        All the dependend libraries, source directories, ... will be configured.

        Set the M2_REPO variable:
        Open the window <Window>\><Preferences>.
        open the item <Java>\><Build Path>\><Classpath variables>.
        Add the new variable <<<M2_REPO>>> with the value of the folder
        <<<USER_HOME/.m2/repository>>>, for example
        <<<C:/Documents and Settings/ge0ffrey/.m2/repository>>>.

        Enable Subversion (if you haven't checked out with Subclipse):
        Right-click on each project and open <Team>\><Share...>.

        NOTE: This solution currently doesn't show you all files due to a limitation of Eclipse:
        Eclipse does not allow a project folder in a project folder.
        (There is an issue at eclipse.org for this.)
        Therefore the direct root, samples and root petclinic content aren't shown.
        This includes the multiproject pom.xml (very important!) and the site documentation files.

    * Using the plugin for Eclipse

        Install the <maven 2 plugin for Eclipse> referenced on {{http://maven.apache.org}}.

        NOTE: This solution is untested.

        Warning: Do not install a mevenide for maven 1 plugin, they do not work for Maven 2.

* NetBeans

    Install the <maven 2 plugin for NetBeans> referenced on {{http://maven.apache.org}}.

* IntelliJ IDEA

    Run in the root of the project <<<mvn idea:idea>>>.
    This command automatically makes use of the <idea plugin in Maven 2>.

    Open the <<<ipr>>> generated in the root of the project.
    All the dependend libraries, source directories, ... will be configured.

    Enable Subversion (if you haven't checked out with IntelliJ):
    Open <File>\><Settings>\><Project>\><Version Control>.
    Select <<<Subversion>>> as version control.

    Note: Use at least version 2.0-beta-2-SNAPSHOT of the maven-idea-plugin to get a decent
    configuration. You 'll have to check it out and mvn install it though...

Maven 2 versus your favorite IDE

    After your IDE is configured with maven 2, you 'll use Maven 2 less frequently.

    You 'll use your IDE to:

    * Compile and run an application or a specific testcase

    * SCM update or commit

    []

    However, Continuum will use Maven 2 every night to:

    * SCM update and clean

    * Compile and run every single testcase

    * Build and deploy snapshots

    * Generate and deploy the site

    []


Petclinic

* Standalone

    Just run the following class of the project
    <<<spring-richclient-petclinic-standalone>>>:

+--
org.springframework.richclient.samples.petclinic.PetClinicStandalone
+--

* Standapart (client-server)

    Do a <<<mvn install>>> and deploy the war to a J2EE server:

+--
cp samples/petclinic/server/target/spring-richclient-petclinic-server-<version>-SNAPSHOT.war /
<tomcat-home>/webapps/petclinic-server.war OR <jboss-home>/server/default/deploy/petclinic-server.war
+--

    TODO: the war's name should not define it's URL

    Then run the following class of the project
    <<<spring-richclient-petclinic-client>>>:

+--
org.springframework.richclient.samples.petclinic.PetClinicClientServer
+--

    TODO NOTE: webstart doesn't work at this time, but will soon

Testing

* Running testcases

    Either configure them in your IDE or do:

+--
mvn test
+--

Website

    To generate the website simply do:

+--
mvn site
+--

    Then take a look at <<<target/site/index.html>>>.

    To change the site content, take a look at <<<src/site/apt>>>.
